<%= render "shared/navbar" %>

<% if flash[:notice] %>
  <div class="alert alert-success"><%= flash[:notice] %></div>
<% end%>

<% if flash[:alert] %>
  <div class="alert alert-danger"><%= flash[:alert] %></div>
<% end %>

<h1>Account details</h1>

<article class="account-card">
  <div>
    <strong><%= @account.institution_name %> (<%= @account.last4 %>): </strong>
    $<%= @account.get_balance_in_dollars %>
  </div>
  <%= @account.subcategory.humanize %> account
  <hr />
  <% if @transactions.count == 0 %>
    <p>No transactions found.</p>
  <% else %>
    <input id="search-bar" type="search" placeholder="Search for transactions" />
    <button id="show-add-rule-modal">Add rule</button>
    <hr />
    <table>
      <thead>
        <tr>
          <th scope="col">Date</th>
          <th scope="col">Description</th>
          <th scope="col">Amount</th>
          <th scope="col">Status</th>
          <th scope="col">Spending category</th>
        </tr>
      </thead>
      <tbody>
        <% @transactions.each do |t| %>
          <tr>
            <th scope="row"><%= t.format_transacted_at %></th>
            <td class="description"><%= t.description %></td>
            <td><%= number_to_currency(t.get_amount_in_dollars) %></td>
            <td><%= t.status %></td>
            <td><%= t.format_spending_category %></td>
          </tr>
        <% end %>
      </tbody>
    </table>
  <% end %>
</article>

<dialog id="add-rule-modal">
  <article>
    <header>
      <strong>Create a spending category rule</strong>
    </header>
    <%= form_for SpendingCategoryRule.new, authenticity_token: true do |f| %>
      <%= f.label :pattern %>
      <%= f.text_field :pattern, required: true %>
      <%= f.label :spending_category %>
      <%= f.select :spending_category, 
        Transaction::SPENDING_CATEGORIES.collect {|c| [c.to_s.humanize, c] }, required: true %>
      <%= check_box_tag :apply_to_existing_transactions, "yes" %>
      <%= label_tag :apply_to_existing_transactions %>
      <hr>
      <footer>
        <button id="save-rule">Save rule</button>
        <button id="cancel-rule" class="secondary">Cancel</button>
      </footer>
    <% end %>
  </article>
</dialog>


<script>
  const searchBar = document.getElementById("search-bar")
  searchBar.addEventListener("input", (event) => {
    const query = event.target.value;
    document.querySelectorAll("td.description").forEach((elem) => {
      const text = elem.innerText.toLowerCase();
      if (text.includes(query)) {
        elem.parentElement.removeAttribute("hidden");
      } else {
        elem.parentElement.setAttribute("hidden", "");
      }
    });
  });

  const addRuleModal = document.getElementById("add-rule-modal");
  const showModalButton = document.getElementById("show-add-rule-modal");
  const saveRuleButton = document.getElementById("save-rule");
  const cancelRuleButton = document.getElementById("cancel-rule");
  const html = document.documentElement;
  const animationTimeout = 400;
  let isModalVisible = false;

  showModalButton.addEventListener("click", (event) => {
    addRuleModal.showModal();
    html.classList.add("modal-is-open", "modal-is-opening");
    isModalVisible = true;

    setTimeout(() => {
      html.classList.remove("modal-is-opening");
    }, animationTimeout);
  });

  const closeModal = () => {
    html.classList.add("modal-is-closing");
    isModalVisible = false;

    setTimeout(() => {
      addRuleModal.close();
      html.classList.remove("modal-is-open", "modal-is-closing");
    }, animationTimeout);
  }

  document.addEventListener("keydown", (event) => {
    if (event.key === "Escape" && isModalVisible) {
      event.preventDefault();
      closeModal();
    }
  });

  cancelRuleButton.addEventListener("click", (event) => {
    closeModal();
  });

  saveRuleButton.addEventListener("click", (event) => {
    closeModal();
  });
</script>
